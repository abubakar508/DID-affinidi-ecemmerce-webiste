"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const openid_client_1 = require("openid-client");
async function AffinidiStrategy(options) {
    if (typeof options.issuer !== 'string' || !options.issuer) {
        throw new TypeError('affinidi issuer is required');
    }
    if (typeof options.client_id !== 'string' || !options.client_id) {
        throw new TypeError('affinidi client_id is required');
    }
    if (typeof options.client_secret !== 'string' || !options.client_secret) {
        throw new TypeError('affinidi client_secret is required');
    }
    //discover the wellknown for issuer
    const affinidi = await openid_client_1.Issuer.discover(options.issuer);
    //console.log('Discovered issuer %s %O', affinidi.issuer, affinidi.metadata)
    const sessionKey = `oidc:${options.id || 'affinidi'}-session-key`;
    const client = new affinidi.Client({
        client_id: options.client_id,
        client_secret: options.client_secret,
        redirect_uris: options.redirect_uris,
        response_types: ['code'],
        token_endpoint_auth_method: 'client_secret_post',
    });
    return {
        client,
        sessionKey,
        strategy: new openid_client_1.Strategy({ client, sessionKey, passReqToCallback: true }, options.verifyCallback),
    };
}
exports.default = AffinidiStrategy;
//# sourceMappingURL=strategy.js.map