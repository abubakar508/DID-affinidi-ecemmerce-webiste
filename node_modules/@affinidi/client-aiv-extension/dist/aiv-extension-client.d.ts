import type { IPresentationDefinition } from '@sphereon/pex';
import type { PresentationSubmission } from '@sphereon/pex-models';
import type { VerifiablePresentation } from './types';
export declare const CHROME_EXTENSION_ID = "fejpjjkbaklcdcibmkbmpanjbiihclon";
export type AuthResponse = {
    state: string;
    vpToken: VerifiablePresentation;
    idToken: string | undefined;
    presentationSubmission: PresentationSubmission;
} | {
    state: string;
    error: string;
    errorDescription: string | undefined;
};
export declare class AivExtensionClient {
    private readonly chromeExtensionId;
    constructor(input?: {
        chromeExtensionId?: string;
    });
    isInstalled(): Promise<boolean>;
    getOidc4vpAuthorizationUrl(): string;
    getChromeWebStoreUrl(): string;
    initiateAuth({ responseDestination, presentationDefinition, state, nonce, }: {
        responseDestination: {
            responseMode: 'query';
            redirectUri: string;
        } | {
            responseMode: 'direct_post';
            responseUri: string;
        };
        presentationDefinition: IPresentationDefinition;
        state: string;
        nonce: string;
    }): void;
    completeAuth(url: string): AuthResponse;
    getVersion(): Promise<string | undefined>;
}
