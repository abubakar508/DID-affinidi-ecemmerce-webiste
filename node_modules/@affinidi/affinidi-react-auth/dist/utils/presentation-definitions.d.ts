export declare const presentationDefinitions: {
    readonly emailVc: {
        id: string;
        input_descriptors: {
            id: string;
            name: string;
            purpose: string;
            group: string[];
            constraints: {
                fields: ({
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains: {
                            type: string;
                            pattern: string;
                        };
                        pattern?: undefined;
                    };
                } | {
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains?: undefined;
                        pattern?: undefined;
                    };
                } | {
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        pattern: string;
                        contains?: undefined;
                    };
                })[];
            };
        }[];
    };
    readonly emailAndProfileVC: {
        id: string;
        submission_requirements: {
            rule: string;
            min: number;
            from: string;
        }[];
        input_descriptors: {
            id: string;
            name: string;
            purpose: string;
            group: string[];
            constraints: {
                fields: ({
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains: {
                            type: string;
                            pattern: string;
                        };
                        pattern?: undefined;
                    };
                } | {
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains?: undefined;
                        pattern?: undefined;
                    };
                } | {
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        pattern: string;
                        contains?: undefined;
                    };
                })[];
            };
        }[];
    };
    readonly moviePreference: {
        id: string;
        input_descriptors: {
            id: string;
            name: string;
            purpose: string;
            constraints: {
                fields: {
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains: {
                            type: string;
                            pattern: string;
                        };
                    };
                }[];
            };
        }[];
    };
    readonly emailAndHITProfileVC: {
        id: string;
        submission_requirements: {
            rule: string;
            min: number;
            from: string;
        }[];
        input_descriptors: ({
            id: string;
            name: string;
            purpose: string;
            group: string[];
            constraints: {
                fields: ({
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains: {
                            type: string;
                            pattern: string;
                        };
                        pattern?: undefined;
                    };
                } | {
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains?: undefined;
                        pattern?: undefined;
                    };
                } | {
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        pattern: string;
                        contains?: undefined;
                    };
                })[];
            };
        } | {
            id: string;
            name: string;
            purpose: string;
            group: string[];
            constraints: {
                fields: ({
                    path: string[];
                    purpose: string;
                    filter: {
                        type: string;
                        contains: {
                            type: string;
                            pattern: string;
                        };
                    };
                } | {
                    path: string[];
                    purpose?: undefined;
                    filter?: undefined;
                })[];
            };
        })[];
    };
};
//# sourceMappingURL=presentation-definitions.d.ts.map